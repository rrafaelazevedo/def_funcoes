# -*- coding: utf-8 -*-
"""aula_06.03.2024_função_def

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v7p3T9JMDymiqES9QEqAHO8uuJSCpIw8
"""

def saudacao(nome):
  print('Olá', nome)

nome = input('Digite seu nome: ')

saudacao(nome)

def alterna(N):
  N = int(input('Digite o limite: '))
  mult = -1
  fat = 1
  for n in range (N):
    print(fat * (N-n), end = ' ')
    fat = fat * mult

alterna(N)

def area_triangulo(base, altura):
  area = base * altura / 2
  return area
base = float(input())
altura = float(input())

print('Área do triângulo', area_triangulo(base, altura),'cm²')

def perimetro(b, h):
  perimetro = (2*b) + (2*h)
  return perimetro
b = float(input('Digíte a medida da base do retângulo: '))
h = float(input('Digite a medida da altura do retângulo: '))

print('O perímetro do retângulo é', perimetro(b, h))

def saudacao(nome, mensagem):
  print('Olá', nome, '\b!', mensagem)
nome = str('Rafael')
mensagem = str('Bom dia')

saudacao(nome, mensagem)

def saudacao(nome, mensagem='Bom dia'):
  print('Olá', nome, '\b!', mensagem)
nome = str(input('Digíte o seu nome: '))
mensagem = str(input('Digite a mensagem: '))

saudacao(nome, )

def quadrado(n):
  return n ** 2

#Chamada da função e atribuição do resultado
resultado = quadrado(4)
print(f'O quadrado de 4 é: {resultado}')

def calcular_valores(num):
  triplo = num * 3
  quadruplo = num * 4
  quinta_potencia = num ** 5
  return triplo, quadruplo, quinta_potencia


#Chamada da função
resultado = calcular_valores(2)
print(resultado)

#Desempacotando dos valores retornados
triplo, quadruplo, quinta_potencia = calcular_valores(3)
print(triplo)
print(quadruplo)
print(quinta_potencia)

def soma_pn(valores):
  soma_p, soma_n = 0, 0
  for n in valores:
    if n >= 0:
      soma_p += n
    else:
      soma_n += n
  return soma_p, soma_n

valores = [2, -1, 3,  -4]
soma_p, soma_n = soma_pn(valores)
print(f'Soma dos positivos = {soma_p}\nSoma dos negativos = {soma_n}')

def teste(a, b):
  return a+b, a*b

res = teste(2, 3)
res1, res2 = teste(2, 3)
print(res)

def somax_xx(xi):
  somax, somaxx = 0, 0
  for x in xi:
    somax += x
    somaxx += x ** 2
  return somax, somaxx
xi = [1, 2, 3]
somax, somaxx = somax_xx(xi)
print(f'A soma básica dos elementos é: {somax} e a soma ao quadrado dos elementos é {somaxx}.')

def area_circulo(raio):
  return 3.1415 * raio**2

#Função como argumento da função print
print('A area do circulo unitário vale:', area_circulo(1))

PI = 3.1415 #variavel global, pois fora de qualquer função

def area_circulo(raio):
  return PI * raio**2

#Função como argumento de função print
print('A soma do círculo unitário vale: ', area_circulo(1))

PI = 3.1415

def area_circulo(raio):
  PI = 3 #Variavel local
  return PI * raio**2

#Função como argumento da função print
print('A area do circulo unitário vale:', area_circulo(1))
print('PI =', PI)